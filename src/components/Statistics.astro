---
// Statistics section component
const stats = [
  {
    number: 29,
    label: "a&ntilde;os de experiencia",
    target: 29,
    suffix: "+"
  },
  {
    number: 1500,
    label: "clientes asegurados",
    target: 1500,
    suffix: "+"
  },
  {
    number: 4,
    label: "de pesos pagados en 2024 en Gastos M&eacute;dicos Mayores",
    target: 4,
    suffix: "M"
  }
];
---

<section class="py-20 bg-rp-gray statistics-section">
  <div class="container mx-auto px-4">
    <div class="grid grid-cols-1 md:grid-cols-3 gap-6 md:gap-8 text-center">
      {stats.map((stat, index) => (
        <div class="bg-white p-6 md:p-8 rounded-lg shadow-lg hover:shadow-xl hover:-translate-y-1 transition-all duration-300">
          <h3 class="text-4xl md:text-5xl font-bold text-rp-orange mb-2 counter" data-target={stat.target}>
            0<span class="suffix">{stat.suffix}</span>
          </h3>
          <p class="text-base md:text-lg text-gray-700">{stat.label}</p>
        </div>
      ))}
    </div>
  </div>
</section>

<script>
// Counter animation
function animateCounters() {
  const counters = document.querySelectorAll('.counter');
  
  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        const counter = entry.target;
        const targetAttr = counter.getAttribute('data-target');
        if (!targetAttr) return;
        
        const target = parseInt(targetAttr);
        const suffix = counter.querySelector('.suffix')?.textContent || '';
        const increment = target / 100;
        let current = 0;
        
        const timer = setInterval(() => {
          current += increment;
          if (current >= target) {
            current = target;
            clearInterval(timer);
          }
          counter.innerHTML = `${Math.floor(current)}<span class="suffix">${suffix}</span>`;
        }, 20);
        
        observer.unobserve(counter);
      }
    });
  }, { threshold: 0.5 });
  
  counters.forEach(counter => observer.observe(counter));
}

// Initialize when DOM is loaded
document.addEventListener('DOMContentLoaded', animateCounters);
// Also initialize if already loaded (for client-side navigation)
if (document.readyState === 'loading') {
  document.addEventListener('DOMContentLoaded', animateCounters);
} else {
  animateCounters();
}
</script>
