---
// Contact section component
const offices = [
  {
    city: "Querétaro",
    address: "Nouvalia, Local 106 Planta Baja, Piso 6, Querétaro, Qro.",
    phone: "+52 (442) 595 8912",
    phoneHref: "tel:+524425958912"
  },
  {
    city: "Celaya",
    address: "Av. Ferrocarril central #709, Planta baja, Local 22, Los Laureles, Celaya, Gto.",
    phone: "+52 (461) 614 4326",
    phoneHref: "tel:+524616144326"
  }
];
---

<section id="contacto" class="py-10 bg-white">
  <div class="container mx-auto px-4">
    <h2 class="text-4xl font-bold text-rp-blue text-center mb-12">Contáctanos</h2>
    
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 lg:gap-12">
      <!-- Formulario de contacto -->
      <div>
        <form id="contactForm" class="space-y-4 md:space-y-6" method="POST">
          <div id="formMessage" class="hidden p-4 rounded-lg mb-4"></div>
          
          <div>
            <label for="name" class="block text-sm font-medium text-gray-700 mb-2">Nombre completo</label>
            <input 
              type="text" 
              id="name" 
              name="name" 
              required
              class="w-full px-3 md:px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-rp-orange focus:border-transparent text-sm md:text-base"
            />
          </div>
          
          <div>
            <label for="email" class="block text-sm font-medium text-gray-700 mb-2">Correo electrónico</label>
            <input 
              type="email" 
              id="email" 
              name="email" 
              required
              class="w-full px-3 md:px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-rp-orange focus:border-transparent text-sm md:text-base"
            />
          </div>
          
          <div>
            <label for="phone" class="block text-sm font-medium text-gray-700 mb-2">Teléfono</label>
            <input 
              type="tel" 
              id="phone" 
              name="phone" 
              class="w-full px-3 md:px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-rp-orange focus:border-transparent text-sm md:text-base"
            />
          </div>
          
          <div>
            <label for="message" class="block text-sm font-medium text-gray-700 mb-2">Mensaje</label>
            <textarea 
              id="message" 
              name="message" 
              rows="4" 
              required
              class="w-full px-3 md:px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-rp-orange focus:border-transparent text-sm md:text-base"
            ></textarea>
          </div>
          
          <button 
            type="submit" 
            id="submitButton"
            class="w-full bg-rp-orange text-white px-4 md:px-6 py-2 md:py-3 rounded-lg font-semibold hover:bg-orange-600 transition duration-300 text-sm md:text-base disabled:opacity-50 disabled:cursor-not-allowed"
          >
            <span id="buttonText">Enviar mensaje</span>
            <span id="buttonLoading" class="hidden">Enviando...</span>
          </button>
        </form>
      </div>

      <!-- Información de oficinas -->
      <div>
        {offices.map((office) => (
          <div class="mb-6 md:mb-8">
            <h3 class="text-lg md:text-xl font-semibold text-rp-blue mb-4">{office.city}</h3>
            <p class="text-gray-700 mb-2 text-sm md:text-base">{office.address}</p>
            <a href={office.phoneHref} class="text-rp-orange hover:text-orange-600 font-semibold text-sm md:text-base">
              {office.phone}
            </a>
          </div>
        ))}
      </div>
    </div>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('contactForm') as HTMLFormElement;
    const formMessage = document.getElementById('formMessage') as HTMLElement;
    const submitButton = document.getElementById('submitButton') as HTMLButtonElement;
    const buttonText = document.getElementById('buttonText') as HTMLElement;
    const buttonLoading = document.getElementById('buttonLoading') as HTMLElement;

    if (!form || !formMessage || !submitButton || !buttonText || !buttonLoading) {
      console.error('Required form elements not found');
      return;
    }

    form.addEventListener('submit', async function(e) {
      e.preventDefault();
      
      // Deshabilitar el botón y mostrar loading
      submitButton.disabled = true;
      buttonText.classList.add('hidden');
      buttonLoading.classList.remove('hidden');
      
      // Ocultar mensajes anteriores
      formMessage.classList.add('hidden');
      
      // Obtener datos del formulario
      const formData = new FormData(form);
      const data = {
        name: formData.get('name') as string,
        email: formData.get('email') as string,
        phone: formData.get('phone') as string,
        message: formData.get('message') as string
      };

      try {
        const response = await fetch('/api/contact', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(data)
        });

        const result = await response.json();

        if (response.ok) {
          // Éxito
          formMessage.className = 'p-4 rounded-lg mb-4 bg-green-100 text-green-800 border border-green-200';
          formMessage.textContent = '¡Mensaje enviado correctamente! Te contactaremos pronto.';
          formMessage.classList.remove('hidden');
          
          // Limpiar el formulario
          form.reset();
        } else {
          // Error del servidor
          formMessage.className = 'p-4 rounded-lg mb-4 bg-red-100 text-red-800 border border-red-200';
          formMessage.textContent = result.error || 'Error al enviar el mensaje. Por favor, intenta de nuevo.';
          formMessage.classList.remove('hidden');
        }
      } catch (error) {
        // Error de red
        formMessage.className = 'p-4 rounded-lg mb-4 bg-red-100 text-red-800 border border-red-200';
        formMessage.textContent = 'Error de conexión. Por favor, verifica tu conexión a internet e intenta de nuevo.';
        formMessage.classList.remove('hidden');
      } finally {
        // Restaurar el botón
        submitButton.disabled = false;
        buttonText.classList.remove('hidden');
        buttonLoading.classList.add('hidden');
      }
    });
  });
</script>
